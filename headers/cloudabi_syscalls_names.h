// Copyright (c) 2016 Nuxi (https://nuxi.nl/) and contributors.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions
// are met:
// 1. Redistributions of source code must retain the above copyright
//    notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright
//    notice, this list of conditions and the following disclaimer in the
//    documentation and/or other materials provided with the distribution.
//
// THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
// FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
// DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
// OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
// HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
// LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
// OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
// SUCH DAMAGE.
//
// This file is automatically generated. Do not edit.
//
// Source: https://github.com/NuxiNL/cloudabi

#ifndef CLOUDABI_SYSCALLS_NAMES_H
#define CLOUDABI_SYSCALLS_NAMES_H

#define CLOUDABI_SYSCALL_NAMES(SYSCALL) \
	SYSCALL(clock_res_get) \
	SYSCALL(clock_time_get) \
	SYSCALL(condvar_signal) \
	SYSCALL(fd_close) \
	SYSCALL(fd_create1) \
	SYSCALL(fd_create2) \
	SYSCALL(fd_datasync) \
	SYSCALL(fd_dup) \
	SYSCALL(fd_pread) \
	SYSCALL(fd_pwrite) \
	SYSCALL(fd_read) \
	SYSCALL(fd_replace) \
	SYSCALL(fd_seek) \
	SYSCALL(fd_stat_get) \
	SYSCALL(fd_stat_put) \
	SYSCALL(fd_sync) \
	SYSCALL(fd_write) \
	SYSCALL(file_advise) \
	SYSCALL(file_allocate) \
	SYSCALL(file_create) \
	SYSCALL(file_link) \
	SYSCALL(file_open) \
	SYSCALL(file_readdir) \
	SYSCALL(file_readlink) \
	SYSCALL(file_rename) \
	SYSCALL(file_stat_fget) \
	SYSCALL(file_stat_fput) \
	SYSCALL(file_stat_get) \
	SYSCALL(file_stat_put) \
	SYSCALL(file_symlink) \
	SYSCALL(file_unlink) \
	SYSCALL(lock_unlock) \
	SYSCALL(mem_advise) \
	SYSCALL(mem_lock) \
	SYSCALL(mem_map) \
	SYSCALL(mem_protect) \
	SYSCALL(mem_sync) \
	SYSCALL(mem_unlock) \
	SYSCALL(mem_unmap) \
	SYSCALL(poll) \
	SYSCALL(poll_fd) \
	SYSCALL(proc_exec) \
	SYSCALL(proc_exit) \
	SYSCALL(proc_fork) \
	SYSCALL(proc_raise) \
	SYSCALL(random_get) \
	SYSCALL(sock_accept) \
	SYSCALL(sock_bind) \
	SYSCALL(sock_connect) \
	SYSCALL(sock_listen) \
	SYSCALL(sock_recv) \
	SYSCALL(sock_send) \
	SYSCALL(sock_shutdown) \
	SYSCALL(sock_stat_get) \
	SYSCALL(thread_create) \
	SYSCALL(thread_exit) \
	SYSCALL(thread_tcb_set) \
	SYSCALL(thread_yield)
#endif
